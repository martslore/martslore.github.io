"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _UnstyledTextInput = _interopRequireDefault(require("./_UnstyledTextInput"));

var _TextInputWrapper = _interopRequireDefault(require("./_TextInputWrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input
const TextInput = /*#__PURE__*/_react.default.forwardRef(({
  icon: IconComponent,
  leadingVisual: LeadingVisual,
  trailingVisual: TrailingVisual,
  block,
  className,
  contrast,
  disabled,
  validationStatus,
  sx: sxProp,
  size: sizeProp,
  // start deprecated props
  width: widthProp,
  minWidth: minWidthProp,
  maxWidth: maxWidthProp,
  variant: variantProp,
  // end deprecated props
  ...inputProps
}, ref) => {
  // this class is necessary to style FilterSearch, plz no touchy!
  const wrapperClasses = (0, _classnames.default)(className, 'TextInput-wrapper');
  return /*#__PURE__*/_react.default.createElement(_TextInputWrapper.default, {
    block: block,
    className: wrapperClasses,
    validationStatus: validationStatus,
    contrast: contrast,
    disabled: disabled,
    sx: sxProp,
    size: sizeProp,
    width: widthProp,
    minWidth: minWidthProp,
    maxWidth: maxWidthProp,
    variant: variantProp,
    hasLeadingVisual: Boolean(LeadingVisual),
    hasTrailingVisual: Boolean(TrailingVisual)
  }, IconComponent && /*#__PURE__*/_react.default.createElement(IconComponent, {
    className: "TextInput-icon"
  }), LeadingVisual && /*#__PURE__*/_react.default.createElement("span", {
    className: "TextInput-icon"
  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/_react.default.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/_react.default.createElement(_UnstyledTextInput.default, _extends({
    ref: ref,
    disabled: disabled
  }, inputProps, {
    "data-component": "input"
  })), TrailingVisual && /*#__PURE__*/_react.default.createElement("span", {
    className: "TextInput-icon"
  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/_react.default.createElement(TrailingVisual, null) : TrailingVisual));
});

TextInput.defaultProps = {
  type: 'text'
};
TextInput.displayName = 'TextInput';
var _default = TextInput;
exports.default = _default;