import React from 'react';
import { SxProp } from '../sx';
export declare type FormControlProps = {
    children?: React.ReactNode;
    /**
     * Whether the control allows user input
     */
    disabled?: boolean;
    /**
     * The unique identifier for this control. Used to associate the label, validation text, and caption text
     */
    id?: string;
    /**
     * If true, the user must specify a value for the input before the owning form can be submitted
     */
    required?: boolean;
} & SxProp;
export interface FormControlContext extends Pick<FormControlProps, 'disabled' | 'id' | 'required'> {
    captionId: string;
    validationMessageId: string;
}
declare const _default: (({ children, disabled: disabledProp, id: idProp, required, sx }: FormControlProps) => JSX.Element) & {
    Caption: React.FC<SxProp>;
    Label: React.FC<import("./_FormControlLabel").Props>;
    LeadingVisual: React.FC<SxProp>;
    Validation: React.FC<import("./_FormControlValidation").FormControlValidationProps>;
};
export default _default;
