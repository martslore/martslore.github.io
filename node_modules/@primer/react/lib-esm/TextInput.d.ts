import React from 'react';
import { ComponentProps, Merge } from './utils/types';
import UnstyledTextInput from './_UnstyledTextInput';
import TextInputWrapper from './_TextInputWrapper';
declare type NonPassthroughProps = {
    className?: string;
    /** @deprecated Use `leadingVisual` or `trailingVisual` prop instead */
    icon?: React.ComponentType<{
        className?: string;
    }>;
    leadingVisual?: string | React.ComponentType<{
        className?: string;
    }>;
    trailingVisual?: string | React.ComponentType<{
        className?: string;
    }>;
} & Pick<ComponentProps<typeof TextInputWrapper>, 'block' | 'contrast' | 'disabled' | 'sx' | 'width' | 'maxWidth' | 'minWidth' | 'variant' | 'size'>;
declare type TextInputInternalProps = Merge<React.ComponentPropsWithoutRef<typeof UnstyledTextInput>, NonPassthroughProps>;
declare const TextInput: React.ForwardRefExoticComponent<Pick<TextInputInternalProps, string | number | symbol> & React.RefAttributes<HTMLInputElement>>;
export declare type TextInputProps = ComponentProps<typeof TextInput>;
export default TextInput;
