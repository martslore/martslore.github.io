function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import classnames from 'classnames';
import React from 'react';
import UnstyledTextInput from './_UnstyledTextInput';
import TextInputWrapper from './_TextInputWrapper';
// using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input
const TextInput = /*#__PURE__*/React.forwardRef(({
  icon: IconComponent,
  leadingVisual: LeadingVisual,
  trailingVisual: TrailingVisual,
  block,
  className,
  contrast,
  disabled,
  validationStatus,
  sx: sxProp,
  size: sizeProp,
  // start deprecated props
  width: widthProp,
  minWidth: minWidthProp,
  maxWidth: maxWidthProp,
  variant: variantProp,
  // end deprecated props
  ...inputProps
}, ref) => {
  // this class is necessary to style FilterSearch, plz no touchy!
  const wrapperClasses = classnames(className, 'TextInput-wrapper');
  return /*#__PURE__*/React.createElement(TextInputWrapper, {
    block: block,
    className: wrapperClasses,
    validationStatus: validationStatus,
    contrast: contrast,
    disabled: disabled,
    sx: sxProp,
    size: sizeProp,
    width: widthProp,
    minWidth: minWidthProp,
    maxWidth: maxWidthProp,
    variant: variantProp,
    hasLeadingVisual: Boolean(LeadingVisual),
    hasTrailingVisual: Boolean(TrailingVisual)
  }, IconComponent && /*#__PURE__*/React.createElement(IconComponent, {
    className: "TextInput-icon"
  }), LeadingVisual && /*#__PURE__*/React.createElement("span", {
    className: "TextInput-icon"
  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/React.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/React.createElement(UnstyledTextInput, _extends({
    ref: ref,
    disabled: disabled
  }, inputProps, {
    "data-component": "input"
  })), TrailingVisual && /*#__PURE__*/React.createElement("span", {
    className: "TextInput-icon"
  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/React.createElement(TrailingVisual, null) : TrailingVisual));
});
TextInput.defaultProps = {
  type: 'text'
};
TextInput.displayName = 'TextInput';
export default TextInput;