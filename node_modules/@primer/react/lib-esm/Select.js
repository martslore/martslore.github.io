function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { get } from './constants';
import TextInputWrapper from './_TextInputWrapper';
const StyledSelect = styled.select.withConfig({
  displayName: "Select__StyledSelect",
  componentId: "sc-li6bhs-0"
})(["appearance:none;background-color:transparent;border:0;color:currentColor;outline:none;width:100%;&:invalid{color:", ";}&:invalid option:not(:first-child){color:", ";}"], get('colors.fg.subtle'), get('colors.fg.default'));

const ArrowIndicatorSVG = ({
  className
}) => /*#__PURE__*/React.createElement("svg", {
  width: "16",
  height: "16",
  fill: "currentColor",
  xmlns: "http://www.w3.org/2000/svg",
  className: className
}, /*#__PURE__*/React.createElement("path", {
  d: "m4.074 9.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.043 9H4.251a.25.25 0 0 0-.177.427ZM4.074 7.47 7.47 4.073a.25.25 0 0 1 .354 0L11.22 7.47a.25.25 0 0 1-.177.426H4.251a.25.25 0 0 1-.177-.426Z"
}));

ArrowIndicatorSVG.displayName = "ArrowIndicatorSVG";
const ArrowIndicator = styled(ArrowIndicatorSVG).withConfig({
  displayName: "Select__ArrowIndicator",
  componentId: "sc-li6bhs-1"
})(["pointer-events:none;position:absolute;right:4px;top:50%;transform:translateY(-50%);"]);
const Select = /*#__PURE__*/React.forwardRef(({
  children,
  disabled,
  placeholder,
  size,
  required,
  validationStatus,
  ref: _propsRef,
  ...rest
}, ref) => /*#__PURE__*/React.createElement(TextInputWrapper, {
  sx: {
    position: 'relative'
  },
  size: size,
  validationStatus: validationStatus
}, /*#__PURE__*/React.createElement(StyledSelect, _extends({
  ref: ref,
  required: required || Boolean(placeholder),
  disabled: disabled,
  "aria-required": required,
  "aria-disabled": disabled,
  "aria-invalid": validationStatus === 'error' ? 'true' : 'false'
}, rest), placeholder && /*#__PURE__*/React.createElement("option", {
  value: "",
  disabled: required,
  selected: true,
  hidden: required
}, placeholder), children), /*#__PURE__*/React.createElement(ArrowIndicator, null)));

const Option = props => /*#__PURE__*/React.createElement("option", props);

Option.displayName = "Option";

const OptGroup = props => /*#__PURE__*/React.createElement("optgroup", props);

OptGroup.displayName = "OptGroup";
export default Object.assign(Select, {
  Option,
  OptGroup
});