{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport UnstyledTextInput from './_UnstyledTextInput';\nimport TextInputWrapper from './_TextInputWrapper'; // using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input\n\nconst TextInput = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    icon: IconComponent,\n    leadingVisual: LeadingVisual,\n    trailingVisual: TrailingVisual,\n    block,\n    className,\n    contrast,\n    disabled,\n    validationStatus,\n    sx: sxProp,\n    size: sizeProp,\n    // start deprecated props\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    // end deprecated props\n    ...inputProps\n  } = _ref;\n  // this class is necessary to style FilterSearch, plz no touchy!\n  const wrapperClasses = classnames(className, 'TextInput-wrapper');\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    block: block,\n    className: wrapperClasses,\n    validationStatus: validationStatus,\n    contrast: contrast,\n    disabled: disabled,\n    sx: sxProp,\n    size: sizeProp,\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    hasLeadingVisual: Boolean(LeadingVisual),\n    hasTrailingVisual: Boolean(TrailingVisual)\n  }, IconComponent && /*#__PURE__*/React.createElement(IconComponent, {\n    className: \"TextInput-icon\"\n  }), LeadingVisual && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-icon\"\n  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/React.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/React.createElement(UnstyledTextInput, _extends({\n    ref: ref,\n    disabled: disabled\n  }, inputProps, {\n    \"data-component\": \"input\"\n  })), TrailingVisual && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-icon\"\n  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/React.createElement(TrailingVisual, null) : TrailingVisual));\n});\nTextInput.defaultProps = {\n  type: 'text'\n};\nTextInput.displayName = 'TextInput';\nexport default TextInput;","map":{"version":3,"sources":["/home/lorenzo/Documenti/Portfolio/node_modules/@primer/react/lib-esm/TextInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","classnames","React","UnstyledTextInput","TextInputWrapper","TextInput","forwardRef","ref","icon","IconComponent","leadingVisual","LeadingVisual","trailingVisual","TrailingVisual","block","className","contrast","disabled","validationStatus","sx","sxProp","size","sizeProp","width","widthProp","minWidth","minWidthProp","maxWidth","maxWidthProp","variant","variantProp","inputProps","wrapperClasses","createElement","hasLeadingVisual","Boolean","hasTrailingVisual","defaultProps","type","displayName"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B,C,CACA;;AACA,MAAMC,SAAS,GAAG,aAAaH,KAAK,CAACI,UAAN,CAAiB,OAkB7CC,GAlB6C,KAkBrC;AAAA,MAlBsC;AAC/CC,IAAAA,IAAI,EAAEC,aADyC;AAE/CC,IAAAA,aAAa,EAAEC,aAFgC;AAG/CC,IAAAA,cAAc,EAAEC,cAH+B;AAI/CC,IAAAA,KAJ+C;AAK/CC,IAAAA,SAL+C;AAM/CC,IAAAA,QAN+C;AAO/CC,IAAAA,QAP+C;AAQ/CC,IAAAA,gBAR+C;AAS/CC,IAAAA,EAAE,EAAEC,MAT2C;AAU/CC,IAAAA,IAAI,EAAEC,QAVyC;AAW/C;AACAC,IAAAA,KAAK,EAAEC,SAZwC;AAa/CC,IAAAA,QAAQ,EAAEC,YAbqC;AAc/CC,IAAAA,QAAQ,EAAEC,YAdqC;AAe/CC,IAAAA,OAAO,EAAEC,WAfsC;AAgB/C;AACA,OAAGC;AAjB4C,GAkBtC;AACT;AACA,QAAMC,cAAc,GAAG/B,UAAU,CAACc,SAAD,EAAY,mBAAZ,CAAjC;AACA,SAAO,aAAab,KAAK,CAAC+B,aAAN,CAAoB7B,gBAApB,EAAsC;AACxDU,IAAAA,KAAK,EAAEA,KADiD;AAExDC,IAAAA,SAAS,EAAEiB,cAF6C;AAGxDd,IAAAA,gBAAgB,EAAEA,gBAHsC;AAIxDF,IAAAA,QAAQ,EAAEA,QAJ8C;AAKxDC,IAAAA,QAAQ,EAAEA,QAL8C;AAMxDE,IAAAA,EAAE,EAAEC,MANoD;AAOxDC,IAAAA,IAAI,EAAEC,QAPkD;AAQxDC,IAAAA,KAAK,EAAEC,SARiD;AASxDC,IAAAA,QAAQ,EAAEC,YAT8C;AAUxDC,IAAAA,QAAQ,EAAEC,YAV8C;AAWxDC,IAAAA,OAAO,EAAEC,WAX+C;AAYxDI,IAAAA,gBAAgB,EAAEC,OAAO,CAACxB,aAAD,CAZ+B;AAaxDyB,IAAAA,iBAAiB,EAAED,OAAO,CAACtB,cAAD;AAb8B,GAAtC,EAcjBJ,aAAa,IAAI,aAAaP,KAAK,CAAC+B,aAAN,CAAoBxB,aAApB,EAAmC;AAClEM,IAAAA,SAAS,EAAE;AADuD,GAAnC,CAdb,EAgBhBJ,aAAa,IAAI,aAAaT,KAAK,CAAC+B,aAAN,CAAoB,MAApB,EAA4B;AAC5DlB,IAAAA,SAAS,EAAE;AADiD,GAA5B,EAE/B,OAAOJ,aAAP,KAAyB,UAAzB,GAAsC,aAAaT,KAAK,CAAC+B,aAAN,CAAoBtB,aAApB,EAAmC,IAAnC,CAAnD,GAA8FA,aAF/D,CAhBd,EAkB6F,aAAaT,KAAK,CAAC+B,aAAN,CAAoB9B,iBAApB,EAAuCf,QAAQ,CAAC;AAC5KmB,IAAAA,GAAG,EAAEA,GADuK;AAE5KU,IAAAA,QAAQ,EAAEA;AAFkK,GAAD,EAG1Kc,UAH0K,EAG9J;AACb,sBAAkB;AADL,GAH8J,CAA/C,CAlB1G,EAuBflB,cAAc,IAAI,aAAaX,KAAK,CAAC+B,aAAN,CAAoB,MAApB,EAA4B;AAC9DlB,IAAAA,SAAS,EAAE;AADmD,GAA5B,EAEjC,OAAOF,cAAP,KAA0B,UAA1B,GAAuC,aAAaX,KAAK,CAAC+B,aAAN,CAAoBpB,cAApB,EAAoC,IAApC,CAApD,GAAgGA,cAF/D,CAvBhB,CAApB;AA0BD,CA/C8B,CAA/B;AAgDAR,SAAS,CAACgC,YAAV,GAAyB;AACvBC,EAAAA,IAAI,EAAE;AADiB,CAAzB;AAGAjC,SAAS,CAACkC,WAAV,GAAwB,WAAxB;AACA,eAAelC,SAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport UnstyledTextInput from './_UnstyledTextInput';\nimport TextInputWrapper from './_TextInputWrapper';\n// using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input\nconst TextInput = /*#__PURE__*/React.forwardRef(({\n  icon: IconComponent,\n  leadingVisual: LeadingVisual,\n  trailingVisual: TrailingVisual,\n  block,\n  className,\n  contrast,\n  disabled,\n  validationStatus,\n  sx: sxProp,\n  size: sizeProp,\n  // start deprecated props\n  width: widthProp,\n  minWidth: minWidthProp,\n  maxWidth: maxWidthProp,\n  variant: variantProp,\n  // end deprecated props\n  ...inputProps\n}, ref) => {\n  // this class is necessary to style FilterSearch, plz no touchy!\n  const wrapperClasses = classnames(className, 'TextInput-wrapper');\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    block: block,\n    className: wrapperClasses,\n    validationStatus: validationStatus,\n    contrast: contrast,\n    disabled: disabled,\n    sx: sxProp,\n    size: sizeProp,\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    hasLeadingVisual: Boolean(LeadingVisual),\n    hasTrailingVisual: Boolean(TrailingVisual)\n  }, IconComponent && /*#__PURE__*/React.createElement(IconComponent, {\n    className: \"TextInput-icon\"\n  }), LeadingVisual && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-icon\"\n  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/React.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/React.createElement(UnstyledTextInput, _extends({\n    ref: ref,\n    disabled: disabled\n  }, inputProps, {\n    \"data-component\": \"input\"\n  })), TrailingVisual && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-icon\"\n  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/React.createElement(TrailingVisual, null) : TrailingVisual));\n});\nTextInput.defaultProps = {\n  type: 'text'\n};\nTextInput.displayName = 'TextInput';\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}