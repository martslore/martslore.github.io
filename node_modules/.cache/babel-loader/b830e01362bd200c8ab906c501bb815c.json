{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport sx from '../sx';\nimport useKeyboardNav from './hooks/useKeyboardNav';\nimport { MenuContext } from './SelectMenuContext';\nimport SelectMenuDivider from './SelectMenuDivider';\nimport SelectMenuFilter from './SelectMenuFilter';\nimport SelectMenuFooter from './SelectMenuFooter';\nimport SelectMenuHeader from './SelectMenuHeader';\nimport SelectMenuItem from './SelectMenuItem';\nimport SelectMenuList from './SelectMenuList';\nimport SelectMenuLoadingAnimation from './SelectMenuLoadingAnimation';\nimport SelectMenuModal from './SelectMenuModal';\nimport SelectMenuTab from './SelectMenuTab';\nimport SelectMenuTabPanel from './SelectMenuTabPanel';\nimport SelectMenuTabs from './SelectMenuTabs';\nconst wrapperStyles = `\n  // Remove marker added by the display: list-item browser default\n  > summary {\n    list-style: none;\n  }\n  // Remove marker added by details polyfill\n  > summary::before {\n    display: none;\n  }\n  // Remove marker added by Chrome\n  > summary::-webkit-details-marker {\n    display: none;\n  }\n`;\nconst StyledSelectMenu = styled.details.withConfig({\n  displayName: \"SelectMenu__StyledSelectMenu\",\n  componentId: \"sc-v4n0s6-0\"\n})([\"\", \" \", \";\"], wrapperStyles, sx); // 'as' is spread out because we don't want users to be able to change the tag.\n\nconst SelectMenu = /*#__PURE__*/React.forwardRef((_ref, forwardedRef) => {\n  let {\n    children,\n    initialTab = '',\n    as: _ignoredAs,\n    ...rest\n  } = _ref;\n  const backupRef = useRef(null);\n  const ref = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : backupRef;\n  const [selectedTab, setSelectedTab] = useState(initialTab);\n  const [open, setOpen] = useState(false);\n  const menuProviderValues = {\n    selectedTab,\n    setSelectedTab,\n    setOpen,\n    open,\n    initialTab\n  };\n  const onClickOutside = useCallback(event => {\n    if ('current' in ref && ref.current && !ref.current.contains(event.target)) {\n      if (!event.defaultPrevented) {\n        setOpen(false);\n      }\n    }\n  }, [ref, setOpen]); // handles the overlay behavior - closing the menu when clicking outside of it\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener('click', onClickOutside);\n      return () => {\n        document.removeEventListener('click', onClickOutside);\n      };\n    }\n  }, [open, onClickOutside]);\n\n  function toggle(event) {\n    setOpen(event.target.open);\n  }\n\n  useKeyboardNav(ref, open, setOpen);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: menuProviderValues\n  }, /*#__PURE__*/React.createElement(StyledSelectMenu, _extends({\n    ref: ref\n  }, rest, {\n    open: open,\n    onToggle: toggle\n  }), children));\n});\nSelectMenu.displayName = 'SelectMenu';\nexport default Object.assign(SelectMenu, {\n  MenuContext,\n  List: SelectMenuList,\n  Divider: SelectMenuDivider,\n  Filter: SelectMenuFilter,\n  Footer: SelectMenuFooter,\n  Item: SelectMenuItem,\n  Modal: SelectMenuModal,\n  Tabs: SelectMenuTabs,\n  Tab: SelectMenuTab,\n  TabPanel: SelectMenuTabPanel,\n  Header: SelectMenuHeader,\n  LoadingAnimation: SelectMenuLoadingAnimation\n});","map":{"version":3,"sources":["/home/lorenzo/Documenti/Portfolio/node_modules/@primer/react/lib-esm/SelectMenu/SelectMenu.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useCallback","useEffect","useRef","useState","styled","sx","useKeyboardNav","MenuContext","SelectMenuDivider","SelectMenuFilter","SelectMenuFooter","SelectMenuHeader","SelectMenuItem","SelectMenuList","SelectMenuLoadingAnimation","SelectMenuModal","SelectMenuTab","SelectMenuTabPanel","SelectMenuTabs","wrapperStyles","StyledSelectMenu","details","withConfig","displayName","componentId","SelectMenu","forwardRef","forwardedRef","children","initialTab","as","_ignoredAs","rest","backupRef","ref","selectedTab","setSelectedTab","open","setOpen","menuProviderValues","onClickOutside","event","current","contains","defaultPrevented","document","addEventListener","removeEventListener","toggle","createElement","Provider","value","onToggle","List","Divider","Filter","Footer","Item","Modal","Tabs","Tab","TabPanel","Header","LoadingAnimation"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,OAAf;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,aAAa,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAcA,MAAMC,gBAAgB,GAAGhB,MAAM,CAACiB,OAAP,CAAeC,UAAf,CAA0B;AACjDC,EAAAA,WAAW,EAAE,8BADoC;AAEjDC,EAAAA,WAAW,EAAE;AAFoC,CAA1B,EAGtB,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CAHsB,EAGNL,aAHM,EAGSd,EAHT,CAAzB,C,CAIA;;AACA,MAAMoB,UAAU,GAAG,aAAa1B,KAAK,CAAC2B,UAAN,CAAiB,OAK9CC,YAL8C,KAK7B;AAAA,MAL8B;AAChDC,IAAAA,QADgD;AAEhDC,IAAAA,UAAU,GAAG,EAFmC;AAGhDC,IAAAA,EAAE,EAAEC,UAH4C;AAIhD,OAAGC;AAJ6C,GAK9B;AAClB,QAAMC,SAAS,GAAG/B,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMgC,GAAG,GAAGP,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkEM,SAA9E;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC0B,UAAD,CAA9C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBnC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMoC,kBAAkB,GAAG;AACzBJ,IAAAA,WADyB;AAEzBC,IAAAA,cAFyB;AAGzBE,IAAAA,OAHyB;AAIzBD,IAAAA,IAJyB;AAKzBR,IAAAA;AALyB,GAA3B;AAOA,QAAMW,cAAc,GAAGxC,WAAW,CAACyC,KAAK,IAAI;AAC1C,QAAI,aAAaP,GAAb,IAAoBA,GAAG,CAACQ,OAAxB,IAAmC,CAACR,GAAG,CAACQ,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACpD,MAA3B,CAAxC,EAA4E;AAC1E,UAAI,CAACoD,KAAK,CAACG,gBAAX,EAA6B;AAC3BN,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF;AACF,GANiC,EAM/B,CAACJ,GAAD,EAAMI,OAAN,CAN+B,CAAlC,CAZkB,CAkBE;;AAEpBrC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,IAAJ,EAAU;AACRQ,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,cAAnC;AACA,aAAO,MAAM;AACXK,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,cAAtC;AACD,OAFD;AAGD;AACF,GAPQ,EAON,CAACH,IAAD,EAAOG,cAAP,CAPM,CAAT;;AASA,WAASQ,MAAT,CAAgBP,KAAhB,EAAuB;AACrBH,IAAAA,OAAO,CAACG,KAAK,CAACpD,MAAN,CAAagD,IAAd,CAAP;AACD;;AAED/B,EAAAA,cAAc,CAAC4B,GAAD,EAAMG,IAAN,EAAYC,OAAZ,CAAd;AACA,SAAO,aAAavC,KAAK,CAACkD,aAAN,CAAoB1C,WAAW,CAAC2C,QAAhC,EAA0C;AAC5DC,IAAAA,KAAK,EAAEZ;AADqD,GAA1C,EAEjB,aAAaxC,KAAK,CAACkD,aAAN,CAAoB7B,gBAApB,EAAsClC,QAAQ,CAAC;AAC7DgD,IAAAA,GAAG,EAAEA;AADwD,GAAD,EAE3DF,IAF2D,EAErD;AACPK,IAAAA,IAAI,EAAEA,IADC;AAEPe,IAAAA,QAAQ,EAAEJ;AAFH,GAFqD,CAA9C,EAKZpB,QALY,CAFI,CAApB;AAQD,CA/C+B,CAAhC;AAgDAH,UAAU,CAACF,WAAX,GAAyB,YAAzB;AACA,eAAepC,MAAM,CAACC,MAAP,CAAcqC,UAAd,EAA0B;AACvClB,EAAAA,WADuC;AAEvC8C,EAAAA,IAAI,EAAExC,cAFiC;AAGvCyC,EAAAA,OAAO,EAAE9C,iBAH8B;AAIvC+C,EAAAA,MAAM,EAAE9C,gBAJ+B;AAKvC+C,EAAAA,MAAM,EAAE9C,gBAL+B;AAMvC+C,EAAAA,IAAI,EAAE7C,cANiC;AAOvC8C,EAAAA,KAAK,EAAE3C,eAPgC;AAQvC4C,EAAAA,IAAI,EAAEzC,cARiC;AASvC0C,EAAAA,GAAG,EAAE5C,aATkC;AAUvC6C,EAAAA,QAAQ,EAAE5C,kBAV6B;AAWvC6C,EAAAA,MAAM,EAAEnD,gBAX+B;AAYvCoD,EAAAA,gBAAgB,EAAEjD;AAZqB,CAA1B,CAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport sx from '../sx';\nimport useKeyboardNav from './hooks/useKeyboardNav';\nimport { MenuContext } from './SelectMenuContext';\nimport SelectMenuDivider from './SelectMenuDivider';\nimport SelectMenuFilter from './SelectMenuFilter';\nimport SelectMenuFooter from './SelectMenuFooter';\nimport SelectMenuHeader from './SelectMenuHeader';\nimport SelectMenuItem from './SelectMenuItem';\nimport SelectMenuList from './SelectMenuList';\nimport SelectMenuLoadingAnimation from './SelectMenuLoadingAnimation';\nimport SelectMenuModal from './SelectMenuModal';\nimport SelectMenuTab from './SelectMenuTab';\nimport SelectMenuTabPanel from './SelectMenuTabPanel';\nimport SelectMenuTabs from './SelectMenuTabs';\nconst wrapperStyles = `\n  // Remove marker added by the display: list-item browser default\n  > summary {\n    list-style: none;\n  }\n  // Remove marker added by details polyfill\n  > summary::before {\n    display: none;\n  }\n  // Remove marker added by Chrome\n  > summary::-webkit-details-marker {\n    display: none;\n  }\n`;\nconst StyledSelectMenu = styled.details.withConfig({\n  displayName: \"SelectMenu__StyledSelectMenu\",\n  componentId: \"sc-v4n0s6-0\"\n})([\"\", \" \", \";\"], wrapperStyles, sx);\n// 'as' is spread out because we don't want users to be able to change the tag.\nconst SelectMenu = /*#__PURE__*/React.forwardRef(({\n  children,\n  initialTab = '',\n  as: _ignoredAs,\n  ...rest\n}, forwardedRef) => {\n  const backupRef = useRef(null);\n  const ref = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : backupRef;\n  const [selectedTab, setSelectedTab] = useState(initialTab);\n  const [open, setOpen] = useState(false);\n  const menuProviderValues = {\n    selectedTab,\n    setSelectedTab,\n    setOpen,\n    open,\n    initialTab\n  };\n  const onClickOutside = useCallback(event => {\n    if ('current' in ref && ref.current && !ref.current.contains(event.target)) {\n      if (!event.defaultPrevented) {\n        setOpen(false);\n      }\n    }\n  }, [ref, setOpen]); // handles the overlay behavior - closing the menu when clicking outside of it\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener('click', onClickOutside);\n      return () => {\n        document.removeEventListener('click', onClickOutside);\n      };\n    }\n  }, [open, onClickOutside]);\n\n  function toggle(event) {\n    setOpen(event.target.open);\n  }\n\n  useKeyboardNav(ref, open, setOpen);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: menuProviderValues\n  }, /*#__PURE__*/React.createElement(StyledSelectMenu, _extends({\n    ref: ref\n  }, rest, {\n    open: open,\n    onToggle: toggle\n  }), children));\n});\nSelectMenu.displayName = 'SelectMenu';\nexport default Object.assign(SelectMenu, {\n  MenuContext,\n  List: SelectMenuList,\n  Divider: SelectMenuDivider,\n  Filter: SelectMenuFilter,\n  Footer: SelectMenuFooter,\n  Item: SelectMenuItem,\n  Modal: SelectMenuModal,\n  Tabs: SelectMenuTabs,\n  Tab: SelectMenuTab,\n  TabPanel: SelectMenuTabPanel,\n  Header: SelectMenuHeader,\n  LoadingAnimation: SelectMenuLoadingAnimation\n});"]},"metadata":{},"sourceType":"module"}