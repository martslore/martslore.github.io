{"ast":null,"code":"import React from 'react';\nimport { Box, Checkbox, Radio, useSSRSafeId } from '.';\nimport { get } from './constants';\nimport { Slots } from './InputField/slots';\nimport ChoiceInputLeadingVisual from './_ChoiceInputLeadingVisual';\nimport InputField from './InputField/InputField';\nimport InputFieldCaption from './InputField/_InputFieldCaption';\n\nconst getInputToRender = (inputType, children) => {\n  const inputComponentMap = {\n    radio: Radio,\n    checkbox: Checkbox\n  };\n  return React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === inputComponentMap[inputType] ? child : null);\n};\n\nconst ChoiceInputField = _ref => {\n  let {\n    children,\n    disabled,\n    id: idProp,\n    validationStatus\n  } = _ref;\n\n  var _React$Children$map;\n\n  const id = useSSRSafeId(idProp);\n  const captionChildren = (_React$Children$map = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) && child.type === InputFieldCaption ? child : null)) === null || _React$Children$map === void 0 ? void 0 : _React$Children$map.filter(Boolean);\n  const captionId = captionChildren !== null && captionChildren !== void 0 && captionChildren.length ? `${id}-caption` : undefined;\n  const inputType = React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) ? child.type === Checkbox : false) ? 'checkbox' : 'radio';\n  const ChoiceInput = getInputToRender(inputType, children);\n  const choiceInputProps = /*#__PURE__*/React.isValidElement(ChoiceInput) ? ChoiceInput.props : undefined;\n\n  if (!ChoiceInput) {\n    // eslint-disable-next-line no-console\n    console.warn('To correctly render this field with the correct ARIA attributes passed to the input, please pass the Checkbox or Radio component from @primer/react as a direct child of the ChoiceInputField component');\n  } else {\n    if (choiceInputProps !== null && choiceInputProps !== void 0 && choiceInputProps.id) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'id' prop directly to the ${inputType} input, it should be passed to the parent component, <ChoiceInputField>`);\n    }\n\n    if (choiceInputProps !== null && choiceInputProps !== void 0 && choiceInputProps.disabled) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'disabled' prop directly to the ${inputType} input, it should be passed to the parent component, <ChoiceInputField>`);\n    }\n\n    if (choiceInputProps !== null && choiceInputProps !== void 0 && choiceInputProps.required) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'required' prop directly to the ${inputType} input, it should be passed to the parent component, <ChoiceInputField>`);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Slots, {\n    context: {\n      captionId,\n      disabled,\n      id,\n      validationStatus\n    }\n  }, slots => {\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: slots.LeadingVisual ? 'center' : undefined\n    }, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        '> input': {\n          marginLeft: 0,\n          marginRight: 0\n        }\n      }\n    }, /*#__PURE__*/React.isValidElement(ChoiceInput) && /*#__PURE__*/React.cloneElement(ChoiceInput, {\n      id,\n      disabled,\n      ['aria-describedby']: captionId\n    }), React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && ![Checkbox, Radio].some(inputComponent => child.type === inputComponent))), slots.LeadingVisual && /*#__PURE__*/React.createElement(Box, {\n      color: disabled ? 'fg.muted' : 'fg.default',\n      sx: {\n        '> *': {\n          minWidth: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          minHeight: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          fill: 'currentColor'\n        }\n      },\n      ml: 2\n    }, slots.LeadingVisual), /*#__PURE__*/React.isValidElement(slots.Label) && !slots.Label.props.visuallyHidden || slots.Caption ? /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      ml: 2\n    }, slots.Label, slots.Caption) : /*#__PURE__*/React.createElement(React.Fragment, null, slots.Label, slots.Caption));\n  });\n};\n\nChoiceInputField.displayName = \"ChoiceInputField\";\n\nconst Label = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(InputField.Label, null, children);\n};\n\nLabel.displayName = \"Label\";\nexport default Object.assign(ChoiceInputField, {\n  Label,\n  Caption: InputField.Caption,\n  LeadingVisual: ChoiceInputLeadingVisual\n});","map":{"version":3,"sources":["/home/lorenzo/Documenti/Portfolio/node_modules/@primer/react/lib-esm/ChoiceInputField.js"],"names":["React","Box","Checkbox","Radio","useSSRSafeId","get","Slots","ChoiceInputLeadingVisual","InputField","InputFieldCaption","getInputToRender","inputType","children","inputComponentMap","radio","checkbox","Children","toArray","find","child","isValidElement","type","ChoiceInputField","disabled","id","idProp","validationStatus","_React$Children$map","captionChildren","map","filter","Boolean","captionId","length","undefined","some","ChoiceInput","choiceInputProps","props","console","warn","required","createElement","context","slots","display","alignItems","LeadingVisual","sx","marginLeft","marginRight","cloneElement","inputComponent","color","minWidth","Caption","minHeight","fill","ml","Label","visuallyHidden","flexDirection","Fragment","displayName","Object","assign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Checkbox, Radio, useSSRSafeId } from '.';\nimport { get } from './constants';\nimport { Slots } from './InputField/slots';\nimport ChoiceInputLeadingVisual from './_ChoiceInputLeadingVisual';\nimport InputField from './InputField/InputField';\nimport InputFieldCaption from './InputField/_InputFieldCaption';\n\nconst getInputToRender = (inputType, children) => {\n  const inputComponentMap = {\n    radio: Radio,\n    checkbox: Checkbox\n  };\n  return React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === inputComponentMap[inputType] ? child : null);\n};\n\nconst ChoiceInputField = ({\n  children,\n  disabled,\n  id: idProp,\n  validationStatus\n}) => {\n  var _React$Children$map;\n\n  const id = useSSRSafeId(idProp);\n  const captionChildren = (_React$Children$map = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) && child.type === InputFieldCaption ? child : null)) === null || _React$Children$map === void 0 ? void 0 : _React$Children$map.filter(Boolean);\n  const captionId = captionChildren !== null && captionChildren !== void 0 && captionChildren.length ? `${id}-caption` : undefined;\n  const inputType = React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) ? child.type === Checkbox : false) ? 'checkbox' : 'radio';\n  const ChoiceInput = getInputToRender(inputType, children);\n  const choiceInputProps = /*#__PURE__*/React.isValidElement(ChoiceInput) ? ChoiceInput.props : undefined;\n\n  if (!ChoiceInput) {\n    // eslint-disable-next-line no-console\n    console.warn('To correctly render this field with the correct ARIA attributes passed to the input, please pass the Checkbox or Radio component from @primer/react as a direct child of the ChoiceInputField component');\n  } else {\n    if (choiceInputProps !== null && choiceInputProps !== void 0 && choiceInputProps.id) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'id' prop directly to the ${inputType} input, it should be passed to the parent component, <ChoiceInputField>`);\n    }\n\n    if (choiceInputProps !== null && choiceInputProps !== void 0 && choiceInputProps.disabled) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'disabled' prop directly to the ${inputType} input, it should be passed to the parent component, <ChoiceInputField>`);\n    }\n\n    if (choiceInputProps !== null && choiceInputProps !== void 0 && choiceInputProps.required) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'required' prop directly to the ${inputType} input, it should be passed to the parent component, <ChoiceInputField>`);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Slots, {\n    context: {\n      captionId,\n      disabled,\n      id,\n      validationStatus\n    }\n  }, slots => {\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: slots.LeadingVisual ? 'center' : undefined\n    }, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        '> input': {\n          marginLeft: 0,\n          marginRight: 0\n        }\n      }\n    }, /*#__PURE__*/React.isValidElement(ChoiceInput) && /*#__PURE__*/React.cloneElement(ChoiceInput, {\n      id,\n      disabled,\n      ['aria-describedby']: captionId\n    }), React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && ![Checkbox, Radio].some(inputComponent => child.type === inputComponent))), slots.LeadingVisual && /*#__PURE__*/React.createElement(Box, {\n      color: disabled ? 'fg.muted' : 'fg.default',\n      sx: {\n        '> *': {\n          minWidth: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          minHeight: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          fill: 'currentColor'\n        }\n      },\n      ml: 2\n    }, slots.LeadingVisual), /*#__PURE__*/React.isValidElement(slots.Label) && !slots.Label.props.visuallyHidden || slots.Caption ? /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      ml: 2\n    }, slots.Label, slots.Caption) : /*#__PURE__*/React.createElement(React.Fragment, null, slots.Label, slots.Caption));\n  });\n};\n\nChoiceInputField.displayName = \"ChoiceInputField\";\n\nconst Label = ({\n  children\n}) => /*#__PURE__*/React.createElement(InputField.Label, null, children);\n\nLabel.displayName = \"Label\";\nexport default Object.assign(ChoiceInputField, {\n  Label,\n  Caption: InputField.Caption,\n  LeadingVisual: ChoiceInputLeadingVisual\n});"]},"metadata":{},"sourceType":"module"}